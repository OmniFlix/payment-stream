syntax = "proto3";
package OmniFlix.paymentstream.paymentstream;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "paymentstream/paymentstream.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/OmniFlix/payment-stream/x/paymentstream/types";

// Query defines the gRPC querier service.
service Query {
  rpc PaymentStreamsAll(QueryAllPaymentStreamRequest) returns (QueryAllPaymentStreamResponse) {
    option (google.api.http).get = "/streaming-payments";
  }

  // this line is used by starport scaffolding # 2
}

message QueryAllPaymentStreamRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPaymentStreamResponse {
  repeated PaymentStream                 payment_streams = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"payment_streams\""
  ];
  cosmos.base.query.v1beta1.PageResponse pagination      = 2;
}

// this line is used by starport scaffolding # 3
